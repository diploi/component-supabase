apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: analytics
  name: analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
    spec:
      restartPolicy: Always
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z {{ .Values.envMap.POSTGRES_HOST.value }} {{ .Values.envMap.POSTGRES_PORT.value }}; do echo waiting for db; sleep 2; done;']
      containers:
        - env:
            - name: DB_DATABASE
              value: _supabase
            - name: DB_HOSTNAME
              value: {{ .Values.envMap.POSTGRES_HOST.value | quote }}
            - name: DB_PASSWORD
              value: {{ .Values.envMap.POSTGRES_PASSWORD.value | quote }}
            - name: DB_PORT
              value: {{ .Values.envMap.POSTGRES_PORT.value | quote }}
            - name: DB_SCHEMA
              value: _analytics
            - name: DB_USERNAME
              value: supabase_admin
            - name: LOGFLARE_FEATURE_FLAG_OVERRIDE
              value: multibackend=true
            - name: LOGFLARE_MIN_CLUSTER_SIZE
              value: '1'
            - name: LOGFLARE_NODE_HOST
              value: 127.0.0.1
            - name: LOGFLARE_PRIVATE_ACCESS_TOKEN
              value: {{ .Values.envMap.LOGFLARE_PRIVATE_ACCESS_TOKEN.value | quote }}
            - name: LOGFLARE_PUBLIC_ACCESS_TOKEN
              value: {{ .Values.envMap.LOGFLARE_PUBLIC_ACCESS_TOKEN.value | quote }}
            - name: LOGFLARE_SINGLE_TENANT
              value: 'true'
            - name: LOGFLARE_SUPABASE_MODE
              value: 'true'
            - name: POSTGRES_BACKEND_SCHEMA
              value: _analytics
            - name: POSTGRES_BACKEND_URL
              value: "postgresql://supabase_admin:{{ .Values.envMap.POSTGRES_PASSWORD.value }}@{{ .Values.envMap.POSTGRES_HOST.value }}:{{ .Values.envMap.POSTGRES_PORT.value }}/_supabase"
          image: supabase/logflare:1.14.2
          # livenessProbe:
          #   exec:
          #     command:
          #       - curl
          #       - http://localhost:4000/health
          #   failureThreshold: 10
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          name: supabase-analytics
          ports:
            - containerPort: 4000
              protocol: TCP

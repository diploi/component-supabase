apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
data:
  kong.yml: |
    _format_version: '2.1'
    _transform: true

    ###
    ### Consumers / Users
    ###
    consumers:
      - username: DASHBOARD
      - username: anon
        keyauth_credentials:
          - key: {{ .Values.envMap.ANON_KEY.value | quote }}
      - username: service_role
        keyauth_credentials:
          - key: {{ .Values.envMap.SERVICE_ROLE_KEY.value | quote }}
      - username: studio-anon
      - username: studio-admin
        jwt_secrets:
          - key: studio-admin
            secret: {{ .Values.envMap.JWT_SECRET.value | quote }}

    ###
    ### Access Control List
    ###
    acls:
      - consumer: anon
        group: anon
      - consumer: service_role
        group: admin

    ###
    ### Diploi login
    ###
    plugins:
      - name: request-termination
        consumer: studio-anon
        config:
          status_code: 401
          content_type: "text/html; charset=utf-8"
          body: |
            <!DOCTYPE html>
            <html>
              <head>
                <title>Supabase</title>
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <style>
                  * {
                    font-family: sans-serif;
                    font-size: 16px;
                  }
                  html,
                  body {
                    margin: 0;
                    min-height: 100vh;
                    background: #202328;
                    color: #fff;
                  }
                  body,
                  form {
                    display: flex;
                    flex-direction: column;
                    gap: 8px;
                  }
                  body {
                    padding: 32px;
                    align-items: center;
                    justify-content: center;
                    box-sizing: border-box;
                  }
                  h1 {
                    font-size: 24px;
                  }
                  p,
                  form,
                  hr {
                    max-width: min(400px, 100%);
                  }
                  p {
                    text-align: center;
                    opacity: 0.8;
                  }
                  form > p {
                    font-size: 12px;
                  }
                  input {
                    padding: 12px;
                    background: #31363f;
                    border-radius: 6px;
                    border: none;
                    color: #fff;
                  }
                  button,
                  .button {
                    padding: 10px 18px;
                    align-self: center;
                    text-decoration: none;
                    background: #6650fa;
                    border-radius: 64px;
                    border: none;
                    color: #fff;
                    cursor: pointer;
                  }
                  a {
                    font-size: inherit;
                    color: inherit;
                  }
                  hr {
                    display: block;
                    margin: 32px 0;
                    width: 100%;
                    height: 2px;
                    background: #31363f;
                    border: none;
                  }
                  #error {
                    display: none;
                    margin: 0;
                    padding: 12px 0;
                    border-radius: 6px;
                    border: 2px solid #d05353;
                    color: color-mix(in lab, #d05353, 40% white);
                  }
                </style>
              </head>
              <body>
                <img
                  alt="supabase logo"
                  src="https://github.com/diploi/component-supabase/raw/main/.diploi/icon.svg"
                  width="64"
                  height="64"
                />
                <h1>Supabase</h1>
                <p>
                  <strong>You have been logged out.</strong><br />Login again from the
                  <a href="https://console.diploi.com/">Diploi Console</a>, or enter
                  credentials for the admin account below.
                </p>
                <a class="button" href="https://console.diploi.com/"
                  >Login via Diploi Console</a
                >
                <hr />
                <form action="/diploi-auth-form/v0.1" method="post">
                  <input name="username" placeholder="Username" />
                  <input name="password" placeholder="Password" type="password" />
                  <p id="error">Failed to login. Check your credentials.</p>
                  <p>
                    You can find the admin credentials from this deployments "Options" tab
                    in the <a href="https://console.diploi.com/">Diploi Console</a>.
                  </p>
                  <button>Login With Credentials</button>
                </form>
                <script>
                  if (new URLSearchParams(document.location.search).has('error')) {
                    document.getElementById('error').style = 'display: block;';
                  }
                </script>
              </body>
            </html>

    ###
    ### API Routes
    ###
    services:
      ## Open Auth routes
      - name: auth-v1-open
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/verify
        routes:
          - name: auth-v1-open
            strip_path: true
            paths:
              - /auth/v1/verify
        plugins:
          - name: cors
      - name: auth-v1-open-callback
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/callback
        routes:
          - name: auth-v1-open-callback
            strip_path: true
            paths:
              - /auth/v1/callback
        plugins:
          - name: cors
      - name: auth-v1-open-authorize
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/authorize
        routes:
          - name: auth-v1-open-authorize
            strip_path: true
            paths:
              - /auth/v1/authorize
        plugins:
          - name: cors

      ## Secure Auth routes
      - name: auth-v1
        _comment: 'GoTrue: /auth/v1/* -> {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/
        routes:
          - name: auth-v1-all
            strip_path: true
            paths:
              - /auth/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure REST routes
      - name: rest-v1
        _comment: 'PostgREST: /rest/v1/* -> {{ .Values.envMap.REST_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.REST_INTERNAL_URL.value }}/
        routes:
          - name: rest-v1-all
            strip_path: true
            paths:
              - /rest/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: true
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure GraphQL routes
      - name: graphql-v1
        _comment: 'PostgREST: /graphql/v1/* -> {{ .Values.envMap.REST_INTERNAL_URL.value }}/rpc/graphql'
        url: {{ .Values.envMap.REST_INTERNAL_URL.value }}/rpc/graphql
        routes:
          - name: graphql-v1-all
            strip_path: true
            paths:
              - /graphql/v1
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: true
          - name: request-transformer
            config:
              add:
                headers:
                  - Content-Profile:graphql_public
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure Realtime routes
      - name: realtime-v1-ws
        _comment: 'Realtime: /realtime/v1/* -> {{ .Values.envMap.REALTIME_INTERNAL_URL.value }}/socket/*'
        url: http://realtime.{{ .Values.identifier }}:4000/socket
        protocol: ws
        routes:
          - name: realtime-v1-ws
            strip_path: true
            paths:
              - /realtime/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon
      - name: realtime-v1-rest
        _comment: 'Realtime: /realtime/v1/* -> {{ .Values.envMap.REALTIME_INTERNAL_URL.value }}/socket/*'
        url: http://realtime.{{ .Values.identifier }}:4000/api
        protocol: http
        routes:
          - name: realtime-v1-rest
            strip_path: true
            paths:
              - /realtime/v1/api
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon
      ## Storage routes: the storage server manages its own auth
      - name: storage-v1
        _comment: 'Storage: /storage/v1/* -> {{ .Values.envMap.STORAGE_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.STORAGE_INTERNAL_URL.value }}/
        routes:
          - name: storage-v1-all
            strip_path: true
            paths:
              - /storage/v1/
        plugins:
          - name: cors

      ## Edge Functions routes
      - name: functions-v1
        _comment: 'Edge Functions: /functions/v1/* -> {{ .Values.envMap.FUNCTIONS_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.FUNCTIONS_INTERNAL_URL.value }}/
        routes:
          - name: functions-v1-all
            strip_path: true
            paths:
              - /functions/v1/
        plugins:
          - name: cors

      ## Analytics routes
      - name: analytics-v1
        _comment: 'Analytics: /analytics/v1/* -> {{ .Values.envMap.ANALYTICS_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.ANALYTICS_INTERNAL_URL.value }}/
        routes:
          - name: analytics-v1-all
            strip_path: true
            paths:
              - /analytics/v1/

      ## Secure Database routes
      - name: meta
        _comment: 'pg-meta: /pg/* -> {{ .Values.envMap.META_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.META_INTERNAL_URL.value }}/
        routes:
          - name: meta-all
            strip_path: true
            paths:
              - /pg/
        plugins:
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin

      ## Protected Dashboard - catch all remaining routes
      - name: dashboard
        _comment: 'Studio: /* -> {{ .Values.envMap.STUDIO_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.STUDIO_INTERNAL_URL.value }}/
        routes:
          - name: dashboard-all
            strip_path: true
            paths:
              - /
        plugins:
          - name: cors
          - name: jwt
            config:
              cookie_names: ["sb-studio"]
              key_claim_name: "iss"
              claims_to_verify: ["exp"]
              anonymous: studio-anon

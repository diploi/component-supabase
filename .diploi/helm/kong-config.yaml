apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
data:
  kong.yml: |
    _format_version: '2.1'
    _transform: true

    ###
    ### Consumers / Users
    ###
    consumers:
      - username: DASHBOARD
      - username: anon
        keyauth_credentials:
          - key: {{ .Values.envMap.ANON_KEY.value }}
      - username: service_role
        keyauth_credentials:
          - key: {{ .Values.envMap.SERVICE_ROLE_KEY.value }}
      - username: studio-anon
      - username: studio-admin
        jwt_secrets:
          - key: studio-admin
            secret: "replace-with-a-very-long-random-string"

    ###
    ### Access Control List
    ###
    acls:
      - consumer: anon
        group: anon
      - consumer: service_role
        group: admin

    ###
    ### Diploi login
    ###
    plugins:
      - name: request-termination
        consumer: studio-anon
        config:
          status_code: 401
          content_type: "text/html; charset=utf-8"
          body: |-
            Test

    ###
    ### API Routes
    ###
    services:
      ## Open Auth routes
      - name: auth-v1-open
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/verify
        routes:
          - name: auth-v1-open
            strip_path: true
            paths:
              - /auth/v1/verify
        plugins:
          - name: cors
      - name: auth-v1-open-callback
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/callback
        routes:
          - name: auth-v1-open-callback
            strip_path: true
            paths:
              - /auth/v1/callback
        plugins:
          - name: cors
      - name: auth-v1-open-authorize
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/authorize
        routes:
          - name: auth-v1-open-authorize
            strip_path: true
            paths:
              - /auth/v1/authorize
        plugins:
          - name: cors

      ## Secure Auth routes
      - name: auth-v1
        _comment: 'GoTrue: /auth/v1/* -> {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.AUTH_INTERNAL_URL.value }}/
        routes:
          - name: auth-v1-all
            strip_path: true
            paths:
              - /auth/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure REST routes
      - name: rest-v1
        _comment: 'PostgREST: /rest/v1/* -> {{ .Values.envMap.REST_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.REST_INTERNAL_URL.value }}/
        routes:
          - name: rest-v1-all
            strip_path: true
            paths:
              - /rest/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: true
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure GraphQL routes
      - name: graphql-v1
        _comment: 'PostgREST: /graphql/v1/* -> {{ .Values.envMap.REST_INTERNAL_URL.value }}/rpc/graphql'
        url: {{ .Values.envMap.REST_INTERNAL_URL.value }}/rpc/graphql
        routes:
          - name: graphql-v1-all
            strip_path: true
            paths:
              - /graphql/v1
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: true
          - name: request-transformer
            config:
              add:
                headers:
                  - Content-Profile:graphql_public
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon

      ## Secure Realtime routes
      - name: realtime-v1-ws
        _comment: 'Realtime: /realtime/v1/* -> {{ .Values.envMap.REALTIME_INTERNAL_URL.value }}/socket/*'
        url: http://realtime.{{ .Values.identifier }}:4000/socket
        protocol: ws
        routes:
          - name: realtime-v1-ws
            strip_path: true
            paths:
              - /realtime/v1/
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon
      - name: realtime-v1-rest
        _comment: 'Realtime: /realtime/v1/* -> {{ .Values.envMap.REALTIME_INTERNAL_URL.value }}/socket/*'
        url: http://realtime.{{ .Values.identifier }}:4000/api
        protocol: http
        routes:
          - name: realtime-v1-rest
            strip_path: true
            paths:
              - /realtime/v1/api
        plugins:
          - name: cors
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin
                - anon
      ## Storage routes: the storage server manages its own auth
      - name: storage-v1
        _comment: 'Storage: /storage/v1/* -> {{ .Values.envMap.STORAGE_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.STORAGE_INTERNAL_URL.value }}/
        routes:
          - name: storage-v1-all
            strip_path: true
            paths:
              - /storage/v1/
        plugins:
          - name: cors

      ## Edge Functions routes
      - name: functions-v1
        _comment: 'Edge Functions: /functions/v1/* -> {{ .Values.envMap.FUNCTIONS_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.FUNCTIONS_INTERNAL_URL.value }}/
        routes:
          - name: functions-v1-all
            strip_path: true
            paths:
              - /functions/v1/
        plugins:
          - name: cors

      ## Analytics routes
      - name: analytics-v1
        _comment: 'Analytics: /analytics/v1/* -> {{ .Values.envMap.ANALYTICS_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.ANALYTICS_INTERNAL_URL.value }}/
        routes:
          - name: analytics-v1-all
            strip_path: true
            paths:
              - /analytics/v1/

      ## Secure Database routes
      - name: meta
        _comment: 'pg-meta: /pg/* -> {{ .Values.envMap.META_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.META_INTERNAL_URL.value }}/
        routes:
          - name: meta-all
            strip_path: true
            paths:
              - /pg/
        plugins:
          - name: key-auth
            config:
              hide_credentials: false
          - name: acl
            config:
              hide_groups_header: true
              allow:
                - admin

      ## Protected Dashboard - catch all remaining routes
      - name: dashboard
        _comment: 'Studio: /* -> {{ .Values.envMap.STUDIO_INTERNAL_URL.value }}/*'
        url: {{ .Values.envMap.STUDIO_INTERNAL_URL.value }}/
        routes:
          - name: dashboard-all
            strip_path: true
            paths:
              - /
        plugins:
          - name: cors
          - name: jwt
            config:
              cookie_names: ["sb-studio"]
              key_claim_name: "iss"
              claims_to_verify: ["exp"]
              anonymous: studio-anon

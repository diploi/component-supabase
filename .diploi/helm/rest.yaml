apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rest
  name: rest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest
  template:
    metadata:
      labels:
        app: rest
    spec:
      restartPolicy: Always
      initContainers:
        - name: wait-for-db-and-analytics
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z {{ .Values.envMap.POSTGRES_HOST.value }} {{ .Values.envMap.POSTGRES_PORT.value }}; do echo waiting for db; sleep 2; done;
              until nc -z analytics 4000; do echo waiting for analytics; sleep 2; done;
      containers:
        - args:
            - postgrest
          env:
            - name: PGRST_APP_SETTINGS_JWT_EXP
              value: {{ .Values.envMap.JWT_EXPIRY.value | quote }}
            - name: PGRST_APP_SETTINGS_JWT_SECRET
              value: {{ .Values.envMap.JWT_SECRET.value | quote }}
            - name: PGRST_DB_ANON_ROLE
              value: anon
            - name: PGRST_DB_SCHEMAS
              value: {{ .Values.envMap.PGRST_DB_SCHEMAS.value | quote }}
            - name: PGRST_DB_URI
              value: "postgres://authenticator:{{ .Values.envMap.POSTGRES_PASSWORD.value }}@{{ .Values.envMap.POSTGRES_HOST.value }}:{{ .Values.envMap.POSTGRES_PORT.value }}/{{ .Values.envMap.POSTGRES_DB.value }}"
            - name: PGRST_DB_USE_LEGACY_GUCS
              value: 'false'
            - name: PGRST_JWT_SECRET
              value: {{ .Values.envMap.JWT_SECRET.value | quote }}
          image: postgrest/postgrest:v12.2.12
          name: supabase-rest
          ports:
            - containerPort: 3000
